import { PaperClipIcon } from '@heroicons/react/20/solid'
import { useState } from 'react'
import { useEffect } from 'react';
export default function SourceExplorer() {
    const [sources, setSources] = useState({})
    const [message, setMessage] = useState('');
    const [source, setSource] = useState('');
    const [loading, setLoading] = useState(false)
    const [maxTokens, setMaxTokens] = useState(256)
    const creationTime = parseInt(props.creation_time)
    const handleMessageChange = event => {
      setMessage(event.target.value);
      console.log(props)
    };
    const handletokenchange = event => {
      setMaxTokens(parseInt(event.target.value));
      console.log(props)
    };
    async function submitQuery(){
        setLoading(true)
        let requestOptions = {
            method: 'POST',
            headers: { 'Content-Type': 'application/json', 'x-api-key': apikey },
            body: JSON.stringify({ 
                model_id: 'context-text-davinci-003',
                inputs: {
                    file_id: props.id,
                    prompt: message,
                    max_tokens: maxTokens
                    }
            })
        }
        let t;
        if (creationTime < 1677040900){
          t= await fetch('https://api.usemeru.com/refine/v3/predict ', requestOptions)
        
      }
        if(creationTime > 1677040900){
          t= await fetch('https://api.usemeru.com/refine/v4/predict ', requestOptions)
        }
        let f = await t.json()
        console.log(f)
        if (f.err_code != 0 ){
            setResponse('Error: ' + f.err_msg)
            setLoading(false)
            return
        }
        setResponse(f.outputs.choices[0].text)
        setSource(String(f.outputs.source))
        setLoading(false)
        return
    }
  return (
    <>
        <div>
          <div className="mt-6 flow-root">
            <ul role="list" className="-my-5 divide-y divide-gray-200">
              {announcements.map((announcement) => (
                <li key={announcement.id} className="py-5">
                  <div className="relative focus-within:ring-2 focus-within:ring-indigo-500">
                    <h3 className="text-sm font-semibold text-gray-800">
                      <a href="#" className="hover:underline focus:outline-none">
                        {/* Extend touch target to entire panel */}
                        <span className="absolute inset-0" aria-hidden="true" />
                        {announcement.title}
                      </a>
                    </h3>
                    <p className="mt-1 text-sm text-gray-600 line-clamp-2">{announcement.preview}</p>
                  </div>
                </li>
              ))}
            </ul>
          </div>
          <div className="mt-6">
            <a
              href="#"
              className="flex w-full items-center justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus-visible:outline-offset-0"
            >
              View all
            </a>
          </div>
        </div>
        </>
  )
}